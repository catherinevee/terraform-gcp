name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: 'us-central1'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.TF_VAR_project_id }}
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Configure gcloud
      run: |
        gcloud config set project ${{ env.TF_VAR_project_id }}
        gcloud config set compute/region us-central1
    
    - name: Run Security Audit
      run: |
        chmod +x scripts/utilities/security-audit.sh
        ./scripts/utilities/security-audit.sh -p ${{ env.TF_VAR_project_id }} -e ${{ matrix.environment }} -f json -o security-audit-${{ matrix.environment }}.json
      env:
        PROJECT_ID: ${{ env.TF_VAR_project_id }}
        ENVIRONMENT: ${{ matrix.environment }}
        REGION: us-central1
    
    - name: Upload Security Audit Report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-${{ matrix.environment }}
        path: security-audit-${{ matrix.environment }}.json
        retention-days: 90
    
    - name: Check Security Score
      run: |
        SECURITY_SCORE=$(jq -r '.security_audit.compliance_scores.pass_percentage' security-audit-${{ matrix.environment }}.json)
        echo "Security score for ${{ matrix.environment }}: $SECURITY_SCORE%"
        
        if (( $(echo "$SECURITY_SCORE < 90" | bc -l) )); then
          echo "Security score below threshold (90%)"
          exit 1
        fi
    
    - name: Comment PR with Security Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            const reportPath = 'security-audit-${{ matrix.environment }}.json';
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const scores = report.security_audit.compliance_scores;
              
              const output = `## Security Scan Results - ${{ matrix.environment }}
              
              **Compliance Score:** ${scores.pass_percentage}%
              
              - **Passed:** ${scores.passed_checks}
              - **Warnings:** ${scores.warned_checks}
              - **Failed:** ${scores.failed_checks}
              - **Total Checks:** ${scores.total_checks}
              
              ${scores.pass_percentage < 90 ? '⚠️ **Security score below threshold (90%)**' : '✅ **Security score meets requirements**'}
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }
          } catch (error) {
            console.error('Error commenting PR:', error);
          }
