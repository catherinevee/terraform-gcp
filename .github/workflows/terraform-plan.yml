name: Terraform Plan

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/terraform-plan.yml'
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: 'us-central1'

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.TF_VAR_project_id }}
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Configure gcloud
      run: |
        gcloud config set project ${{ env.TF_VAR_project_id }}
        gcloud config set compute/region us-central1
    
    - name: Terraform Format Check
      run: |
        cd infrastructure/environments/${{ matrix.environment }}
        terraform fmt -check -recursive
    
    - name: Terraform Init
      run: |
        cd infrastructure/environments/${{ matrix.environment }}
        terraform init -backend=false
    
    - name: Terraform Validate
      run: |
        cd infrastructure/environments/${{ matrix.environment }}
        terraform validate
    
    - name: Terraform Plan
      run: |
        cd infrastructure/environments/${{ matrix.environment }}
        terraform plan -var-file=terraform.tfvars -out=tfplan-${{ matrix.environment }}
      env:
        TF_VAR_environment: ${{ matrix.environment }}
    
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ matrix.environment }}
        path: infrastructure/environments/${{ matrix.environment }}/tfplan-${{ matrix.environment }}
        retention-days: 1
    
    - name: Comment PR with Plan
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const planPath = path.join('infrastructure/environments/${{ matrix.environment }}', 'tfplan-${{ matrix.environment }}');
            if (fs.existsSync(planPath)) {
              const plan = fs.readFileSync(planPath, 'utf8');
              const output = `## Terraform Plan - ${{ matrix.environment }}
              
              \`\`\`hcl
              ${plan}
              \`\`\`
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }
          } catch (error) {
            console.error('Error commenting PR:', error);
          }
