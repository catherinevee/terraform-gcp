name: Trivy Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        exit-code: '1'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-vulnerability'

    - name: Run Trivy secret scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-secrets.sarif'
        scanners: 'secret'
        exit-code: '1'

    - name: Upload Trivy secret scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-secrets.sarif'
        category: 'trivy-secret'

    - name: Run Trivy IaC scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-iac.sarif'
        exit-code: '1'

    - name: Upload Trivy IaC scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-iac.sarif'
        category: 'trivy-iac'

    - name: Generate Trivy report
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        output: 'trivy-report.txt'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

    - name: Upload Trivy report as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-security-report
        path: trivy-report.txt
        retention-days: 30

    - name: Comment PR with Trivy results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('trivy-report.txt', 'utf8');
          
          // Truncate report if too long (GitHub comment limit)
          const maxLength = 60000;
          const truncatedReport = report.length > maxLength 
            ? report.substring(0, maxLength) + '\n... (report truncated)'
            : report;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔍 Trivy Security Scan Results\n\n\`\`\`\n${truncatedReport}\n\`\`\``
          });
